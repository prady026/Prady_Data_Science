#Packages
install.packages("class")#knn classifier
install.packages("gmodels")
library(class)
library(gmodels)#CrossTable

#1)Data setup
wbcd=read.table(file="D:/CARRER/My_Course/Daily Classes/Module3/5 KNN Classifier/wisc_bc_data-KNN.csv",header=T,sep=",")
str(wbcd)
dim(wbcd)
wbcd=wbcd[,-1]
table(wbcd$diagnosis)
wbcd$diagnosis=factor(wbcd$diagnosis,levels=c("B","M"),labels=c("Benign","Malignant"))

#2)Normalize the data
normalize=function(x){
return((x-min(x))/(max(x)-min(x)))
}
wbcd_n=as.data.frame(apply(wbcd[,2:31],MARGIN=2,normalize))

#3) Creation of train data and test data.
wbcd_train=wbcd_n[1:469,]
wbcd_test=wbcd_n[470:569,]
wbcd_train_labels=wbcd[1:469,1]
wbcd_test_labels=wbcd[470:569,1]

#4)Building the classifier
wbcd_pred=knn(train=wbcd_train,test=wbcd_test,cl=wbcd_train_labels,k=21)


#5) Performance testing
# prop.r: If TRUE, Row proportions will be included
# prop.c: If TRUE, Column proportions will be included
# prop.t: If TRUE, Table proportions will be included
# prop.chisq: If TRUE, chi-square contribution of each cell will be included


Performance=CrossTable(wbcd_test_labels,wbcd_pred,prop.t=F,prop.c=F,prop.r=T,dnn=c("Actual","Predict"))
Accuracy=(Performance$t[1,1]+Performance$t[2,2])/length(wbcd_test_labels)
Accuracy

mean(wbcd_pred == wbcd_test_labels)

library(caret)
confusionMatrix(wbcd_pred, wbcd_test_labels)


# How to test on new data
# Testing on new data on existing on algorithm 
# test_pred <- predict(knn_fit, newdata = test)
# test_pred

# confusionMatrix(test_pred, test$left )
