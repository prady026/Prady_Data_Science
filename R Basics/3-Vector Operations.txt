#1)*****************
#Creating vector
x=1:10
x=10:1
x=-5:10
x=c(1:10)
x=c(-5:10)
x=c(1,2,3,4,5,6,7,8,9,10)
#*************************

#1) Naming a vector
a=c(1:3)
names(a) #Returns null
names(a)=c("one","two","three")
names(a)
a

#2)Accessing vector element
x=c(1,3,5,7)
x[2]
x[c(1,3)]
x[-2]
x[-c(1,3)]
x[0]
x[10]
#Note: X[0],x[10],output is numeric class only
#************************************

#3)Modification of Vector elements
x=c(1,3,5,7)
x[2]=13
x[-c(2,3)]=c(11,17)
x[-1]=c(110,170,70)

#****************************
x=c(1,3,5,7)
x[9]=x[7]
#****************************
x=c(1,3,5,7)
x[9]=x[2]
#****************************
x=c(1,3,5,7)
x[2]=x[11] 
#****************************
x=c(1,3,5,7)
x[c(2,5)]=x[c(4,4)] # It assign 4 element of to 2nd element and 4th element to 5th element 
#****************************			from x=1,3,5,7
x=c(1,3,5,7)
x[c(2,7)]=x[c(1,3)]
#****************************
x=c(1,3,5,7)
x[c(2,3)]=x[c(1,10)]
#*****************************************************

#4)Airthematic Operations on Vector
x=c(1,3,5,7)
x+10
x-5
x*10
x/10
x=c(1,3,5,7)
x%/%2
x=c(1,3,5,7)
x%%2
min(x)
max(x)
median(x)
mean(x)
range(x)
var(x)
sd(x)
quantile(x)
quantile(1:20,probs=c(.25,0.9))
IQR(x)
#*****************************************************

#5)"WHICH" function
x=1:9
x>5
#*****************************************************
x=c(2,3,4,5,11,112,133,33)
y=which(x>5) #Returns the position,not values
y=x[which(x>5)] #Returns the values
y=x[x>5] # Same result
#*****************************************************
x=c(2,3,4,5,11,112,133,33)
min(x)
which(x==min(x)) #Returns the position
x[which(x==min(x))]#Returns the  value
which.min(x)#Returns the position,not values
#*****************************************************
x=c(2,3,4,5,11,112,133,33)
max(x)
which(x==max(x)) #Returns the position,not values
x[which(x==max(x))]#Returns the  value
which.max(x)#Returns the position,not values
#*****************************************************
x=c(8,7,4,5,11,112,133,33)
which(x>2 & x<5)
x[which(x>2 & x<5)]
#*****************************************************
x=c(8,7,4,5,11,112,133,33)
which(x>7 | x<12)
x[which(x>7 | x<12)]
#*****************************************************

#6)"REP" function
x=rep(1:5,times=10)
x=rep(100,times=10)
x=rep(c(3,6),times=4)
x=rep("text",times=5)
x=rep(c("my","text"),times=3)
x=rep(1:4,5:8)
x=rep(1:4,1:2) #output as invalid argument
x=rep(1:4,c(2,3,5,7))
x=rep(1:4,each=3)
x=rep(1:4,each=2,times=3)
#*****************************************************

#7)"SEQ" function
x=seq(from=1,to=10,by=3)
x=seq(from=1,to=10,by=-3) # wrong arguments
x=seq(from=10,to=1,by=-3)
x=seq(from=1,to=10,length=100)
x=seq(from=1,by=2,length=100)
y=seq(from=1,by=3,length=50)
z=c(x,y)
#*****************************************************

#8)seq_len() & seq_along() functions
x=c(8,7,4,5,11,112,133,33)
length(x)
seq_len(length(x)) #Returns length of the object

#*****************************************************

#9) Dealing with missing values
x=c(1,3,5,7)
x[2]=NA
x[c(2,3)]=NA
is.na(x) #Output is a logical vector
x[!is.na(x)]
na.omit(x)

#Note: Observe the below operations carefully
#x=c(1,NA,5,NA)
#x==NA # not followed it so far
#x[x==NA]# not followed it so far
#x=='NA'
#*****************************************************

#10) Naming a vector
x=c(1:3)
names(x)=c("a","b","c")
x[c("a","b")]
y=c("My","Text")
names(y)=c("First","Last")
y[c("Last","First")]
#*****************************************************

#9) Checking the availability of elements in a vector
a=c(1:10)
b=c(5:15)
1 %in% a
1 %in% b
a %in% b
b %in% a
is.element(a,b)
is.element(b,a)

