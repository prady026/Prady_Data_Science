plot(x[,1],x[,2],pch=18,col="red")
hc.single   =hclust(dist(x), method ="single")
plot(hc.single , main=" Single Linkage ", xlab="", sub ="",cex =.9,col="darkgreen")
cutree (hc.single , 2)
z = cutree (hc.single , 2)
z
hc.single   =hclust(dist(x), method ="single")
plot(hc.single , main=" Single Linkage ", xlab="", sub ="",cex =.9,col="darkgreen")
cutree (hc.single , 5)
hc.single   =hclust(dist(x), method ="single")
plot(hc.single , main=" Single Linkage ", xlab="", sub ="",cex =.9,col="darkgreen")
cutree (hc.single , 5)
hc.single   =hclust(dist(x), method ="single")
plot(hc.single , main=" Single Linkage ", xlab="", sub ="",cex =.9,col="darkgreen")
cutree (hc.single , 2)
hc.complete =hclust(dist(x), method ="complete")
plot(hc.complete ,main =" Complete Linkage ", xlab="", sub ="",cex =0.9,col="blue")
cutree (hc.complete , 2)
hc.complete =hclust(dist(x), method ="complete")
plot(hc.complete ,main =" Complete Linkage ", xlab="", sub ="",cex =0.9,col="blue")
cutree (hc.complete , 2)
hc.complete =hclust(dist(x), method ="average")
plot(hc.complete ,main =" average Linkage ", xlab="", sub ="",cex =0.9,col="orange")
cutree (hc.complete , 2)
hc.complete <- hclust(dist(x), method = "complete")
plot(hc.complete, main ="complete linkage", cex = 1, col = "orange")
cutree(hc.complete,2)
set.seed (2)
x=matrix (rnorm (50*2) , ncol =2)
dim(x)
head(x)
plot(x[,1],x[,2],pch=18,col="red")
x[1:25 ,1]=x[1:25 ,1]+3
x[1:25 ,2]=x[1:25 ,2]-4
plot(x[,1],x[,2],pch=18,col="red")
hc.complete <- hclust(dist(x), method = "complete")
plot(hc.complete, main ="complete linkage", cex = 1, col = "orange")
cutree(hc.complete,2)
hc.single   =hclust(dist(x), method ="single")
plot(hc.single , main=" Single Linkage ", xlab="", sub ="",cex =.9,col="darkgreen")
cutree (hc.single , 2)
hc.complete <- hclust(dist(x), method = "complete")
plot(hc.complete, main ="complete linkage", cex = 1, col = "orange")
cutree(hc.complete,2)
set.seed (2)
x=matrix (rnorm (50*2) , ncol =2)
dim(x)
plot(x[,1],x[,2],pch=18,col="red")
x[1:25 ,1]=x[1:25 ,1]+3
x[1:25 ,2]=x[1:25 ,2]-4
plot(x[,1],x[,2],pch=18,col="red")
km.out = kmeans(x,2)
km.out$cluster
plot(x, col=(km.out$cluster), main = "K-means clustering with k = 2",pch = 20, cex = 2)
set.seed (4)
km.out =kmeans (x,3, nstart =1)
km.out$tot.withinss
plot(x, col =(km.out$cluster) , main="K-Means Clustering Results with K", xlab ="", ylab="", pch =20, cex =2)
set.seed (4)
km.out =kmeans (x,3, nstart =1)
km.out$cluster
km.out$tot.withinss
plot(x, col =(km.out$cluster) , main="K-Means Clustering Results with K", xlab ="", ylab="", pch =20, cex =2)
set.seed (4)
km.out =kmeans (x,3, nstart =20)
km.out$cluster
km.out$tot.withinss
plot(x, col =(km.out$cluster) , main="K-Means Clustering Results with K", xlab ="", ylab="", pch =20, cex =2)
set.seed (4)
km.out =kmeans (x,3, nstart =50)
km.out$cluster
km.out$tot.withinss
set.seed (4)
km.out =kmeans (x,3, nstart =29)
km.out$cluster
km.out$tot.withinss
install.packages("tree")
install.packages("ISLR")
library(tree)
library(ISLR)
attach(Carseats)
dim(Carseats)
names(carseats)
head(carseats)
rtree = attach(Carseats)
rtree = read.csv(Carseats)
rtree = read.csv("Carseats")
rtree = read.table("Carseats")
head(Carseats)
names(Carseats)
High = ifelse(Sales <=8, "No", "Yes")
Carseats = data.frame(High)
names(Carseats)
attach(Carseats)
library(ISLR)
attach(Carseats)
dim(Carseats)
rm(High)
dim(Carseats)
install.packages("tree")
install.packages("ISLR")
library(tree)
library(ISLR)
install.packages("tree")
attach(Carseats)
dim(Carseats)
names(Carseats)
head(Carseats)
Carseats = data.frame(Carseats,High)
head(Carseats)
library("ISLR", lib.loc="~/R/win-library/3.6")
detach("package:ISLR", unload=TRUE)
install.packages("tree")
install.packages("ISLR")
library(tree)
library(ISLR)
attach(Carseats)
dim(Carseats)
names(Carseats)
head(Carseats)
High = ifelse(Sales <=8, "No", "Yes")
Carseats = data.frame(Carseats,High)
head(Carseats)
class.tree = tree(High~.-Sales,data = Carseats)
names(class.tree)
summary(class.tree)
plot(class.tree)
text(class.tree,pretty=0)
class.tree
set.seed(2)
train=sample(1:nrow(Carseats),200)
Carseats.test=Carseats[-train,]
High.test=High[-train]
tree.carseats=tree(High~.-Sales,Carseats,subset=train)
tree.pred=predict(tree.carseats,Carseats.test,type="class")
table(tree.pred,High.test
)
mean(tree.pred==High.test)
set.seed(3)
tree.carseats=tree(High~.-Sales,Carseats,subset=train)
tree.cv=cv.tree(tree.carseats,FUN=prune.misclass) # FUN default is deviance
names(tree.cv)
tree.cv
plot(tree.cv$size,tree.cv$dev,type="b")
Prune.tree=prune.misclass(tree.carseats,best=9)
plot(Prune.tree)
text(Prune.tree,pretty=0)
Prunetree.pred=predict(Prune.tree,Carseats.test,type='class')
table(Prunetree.pred,High.test)
mean(Prunetree.pred==High.test)
setwd("E:/Data_Science/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 9 - Random Forest Regression")
dataset = read.csv("Position_Salaries")
dataset = read.csv("Position_Salaries.csv")
View(dataset)
dataset = dataset[,2:3]
sregressor = lm(Salary ~ Level, data = dataset)
library(ggplot2)
attach(dataset)
library(ggplot2)
attach(dataset)
ggplot()+
geom_point(aes(x = Level, y = Salary),
colour = 'red')+
geom_line(aes(x = Level, y = predict(regressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Salary vs Level(Simple linear Regression)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
attach(dataset)
ggplot()+
geom_point(aes(x = Level, y = Salary),
colour = 'red')+
geom_line(aes(x = Level, y = predict(sregressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Salary vs Level(Simple linear Regression)')+
xlab('Level')+
ylab('Salary')
y_pred_SL = predict(sregressor, data.frame(Level = 6.5))
summary(sregressor)
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
dataset$Level2 = dataset$Level2^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
pregressor = lm(Salary ~ ., data = dataset)
library(ggplot2)
attach(dataset)
ggplot()+
geom_point(aes(x = Level, y = Salary),
colour = 'red')+
geom_line(aes(x = Level, y = predict(pregressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Salary vs Level(Simple linear Regression)')+
xlab('Level')+
ylab('Salary')
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
dataset$Level2 = dataset$Level2^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
dataset$Level4 = dataset$Level^5
pregressor = lm(Salary ~ ., data = dataset)
library(ggplot2)
attach(dataset)
ggplot()+
geom_point(aes(x = Level, y = Salary),
colour = 'red')+
geom_line(aes(x = Level, y = predict(pregressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Salary vs Level(Simple linear Regression)')+
xlab('Level')+
ylab('Salary')
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
dataset$Level2 = dataset$Level2^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
dataset$Level4 = dataset$Level^5
pregressor = lm(Salary ~ ., data = dataset)
library(ggplot2)
attach(dataset)
ggplot()+
geom_point(aes(x = Level, y = Salary),
colour = 'red')+
geom_line(aes(x = Level, y = predict(pregressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Salary vs Level(Polynomial Regression)')+
xlab('Level')+
ylab('Salary')
y_pred_SL = predict(sregressor, data.frame(Level = 6.5))
y_pred_Pl = predict(sregressor, data.frame(Level = 6.5))
y_pred_Pl = predict(sregressor, data.frame(Level = 6.5,
Level = 6.5^2,
Level = 6.5^3,
Level = 6.5^4,
Level = 6.5^5))
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5))
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5))
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4,
Level5 = 6.5^5))
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5))
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5,))
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
dataset$Level2 = dataset$Level2^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
dataset$Level4 = dataset$Level^5
pregressor = lm(Salary ~ ., data = dataset)
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5,))
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
dataset$Level2 = dataset$Level2^2
dataset$Level3 = dataset$Level3^3
dataset$Level4 = dataset$Level4^4
dataset$Level5 = dataset$Level5^5
pregressor = lm(Salary ~ ., data = dataset)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
dataset$Level5 = dataset$Level^5
pregressor = lm(Salary ~ ., data = dataset)
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5,))
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
pregressor = lm(Salary ~ ., data = dataset)
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(pregressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Salary vs Level(Polynomial Regression)')+
xlab('Level')+
ylab('Salary')
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5,))
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4,
Level5  6.5^5))
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
pregressor = lm(Salary ~ ., data = dataset)
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(pregressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Salary vs Level(Polynomial Regression)')+
xlab('Level')+
ylab('Salary')
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
dataset$Level5 = dataset$Level^5
pregressor = lm(Salary ~ ., data = dataset)
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(pregressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Salary vs Level(Polynomial Regression)')+
xlab('Level')+
ylab('Salary')
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4,
Level5 = 6.5^5))
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
# dataset$Level5 = dataset$Level^5
pregressor = lm(Salary ~ ., data = dataset)
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(pregressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Salary vs Level(Polynomial Regression)')+
xlab('Level')+
ylab('Salary')
y_pred_Pl = predict(pregressor, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
install.packages('randomForest')
library(randomForest)
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
set.seed(1255)
dregressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 10)
library(ggplot2)
x_grid = seq(min(dataset$Level, max(dataset$Salary),0.01))
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(dregressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Salary vs Level(Polynomial Regression)')+
xlab('Level')+
ylab('Salary')
x_grid = seq(min(dataset$Level, max(dataset$Salary),0.01))
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(dregressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Salary vs Level(Polynomial Regression)')+
xlab('Level')+
ylab('Salary')
x_grid = seq(min(dataset$Level, max(dataset$Salary),0.01)
library(randomForest)
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
set.seed(1255)
dregressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 10)
x_grid = seq(min(dataset$Level, max(dataset$Salary),0.01))
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(dregressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Salary vs Level(Random Forest Regression)')+
xlab('Level')+
ylab('Salary')
x_grid = seq(min(dataset$Level, max(dataset$Salary),0.01))
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(dregressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Salary vs Level(Random Forest Regression)')+
xlab('Level')+
ylab('Salary')
x_grid = seq(min(dataset$Level, max(dataset$Salary),0.01))
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(dregressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Salary vs Level(Random Forest Regression)')+
xlab('Level')+
ylab('Salary')
library(randomForest)
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
set.seed(125)
dregressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 10)
library(ggplot2)
x_grid = seq(min(dataset$Level, max(dataset$Salary),0.01))
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(dregressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Salary vs Level(Random Forest Regression)')+
xlab('Level')+
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(dregressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Salary),0.01))
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(dregressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Salary vs Level(Random Forest Regression)')+
xlab('Level')+
ylab('Salary')
y_pred_d = predict(dregressor, data.frame(Level = 6.5))
library(randomForest)
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
set.seed(125)
dregressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 500)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Salary),0.01))
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(dregressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Salary vs Level(Random Forest Regression)')+
xlab('Level')+
ylab('Salary')
y_pred_d = predict(dregressor, data.frame(Level = 6.5))
library(randomForest)
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
set.seed(125)
dregressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 1000)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Salary),0.01))
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(dregressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Salary vs Level(Random Forest Regression)')+
xlab('Level')+
ylab('Salary')
y_pred_d = predict(dregressor, data.frame(Level = 6.5))
View(dataset)
rm()
read.csv('heart_disease.csv')
dataset = read.csv('heart_disease.csv')
setwd("F:/Data Science/DS 14/Unit 2/MLR")
dataset = read.csv('heart_disease.csv')
View(dataset)
